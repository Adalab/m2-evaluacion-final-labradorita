{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["\"use strict\";\n\nlet series = [];\nlet favSeries = [];\nconst inputText = document.querySelector(\".js-input\");\nconst buttonSearch = document.querySelector(\".js-button\");\n\nconst defImage = \"https://via.placeholder.com/210x295/ffffff/666666/?text=TV\";\n\n// Escribir (set) y recuperar (get) datos del Local Storage\nconst getSeriesFromLS = () => {\n  // separar el return y la constante\n  const data = JSON.parse(localStorage.getItem(\"favSeries\"));\n  // si data contiene datos\n  if (!!data === true) {\n    favSeries = data;\n  }\n  //return data;\n};\n\nconst setSeriesIntoLS = () => {\n  localStorage.setItem(\"favSeries\", JSON.stringify(favSeries));\n};\n\n// Recoger favoritos al refrescar\nconst startSearch = () => {\n  const seriesFromLS = getSeriesFromLS();\n  if (seriesFromLS === null) {\n    buttonSearch.addEventListener(\"click\", getDataFromServer);\n  } else {\n    //saveFavsInFav(seriesFromLS);\n    paintFavSeries();\n    buttonSearch.addEventListener(\"click\", getDataFromServer);\n  }\n};\n\n// traer datos del servidor/API y devolverlos en formato JSON\n\nconst getDataFromServer = () => {\n  return fetch(`http://api.tvmaze.com/search/shows?q=${inputText.value}`)\n    .then(response => response.json())\n    .then(data => {\n      data = formatData(data);\n      saveDataInSeries(data);\n      paintSeries();\n      listenSeries();\n      getSeriesFromLS();\n      setSeriesIntoLS(); //despues de guardar\n    });\n};\n\n// creamos array de las peliculas buscadas, con los datos necesarios\nconst formatData = function(data) {\n  const searchResult = [];\n  for (const serieItem of data) {\n    searchResult.push({\n      name: serieItem.show.name,\n      image: defaultImage(serieItem)\n    });\n  }\n\n  console.log(\"Format JSON data and return it as array >>> Return\", searchResult);\n  return searchResult;\n};\n\n// poner imagen para las que no tenga imagen\nconst defaultImage = function(serieItem) {\n  if (serieItem.show.image === null) {\n    return \"https://via.placeholder.com/210x295/ffffff/666666/?text=TV\";\n  } else {\n    return serieItem.show.image.medium;\n  }\n};\n\n//Guarda los datos en el array\nconst saveDataInSeries = data => {\n  // guardar datos en array creada al inicio\n  series = data;\n  console.log(\"Save data in series array >> series\", series);\n};\n\nconst paintSeries = () => {\n  // cojo elemento contenedor del DOM\n  const mainList = document.querySelector(\".js-list\");\n  // declaramos string vacío para pasarlo por el innerHTML\n  let htmlCode = \"\";\n  for (let serieIndex = 0; serieIndex < series.length; serieIndex = serieIndex + 1) {\n    htmlCode += `<div class=\"series__item \n    ${getFavClassName(serieIndex)}\n    js-serie\" data-index=\"${serieIndex}\">`;\n    htmlCode += `<img  class=\"series__image\" src=\"${series[serieIndex].image}\" alt=\"\">`;\n    htmlCode += `<p class=\"series__name\n    ${getFavClassName(serieIndex)}\">${series[serieIndex].name}</p>`;\n    htmlCode += \"</div>\";\n  }\n  mainList.innerHTML = htmlCode;\n};\n\nconst getFavClassName = serieIndex => {\n  if (isFavSerie(serieIndex)) {\n    return \"serie__item--favourite\";\n  } else {\n    return \"\";\n  }\n};\n\n// Esuchar si se ha hecho click (fav) y coger esa acción\nconst listenSeries = () => {\n  const serieContainer = document.querySelectorAll(\".js-serie\");\n  for (const serieContainerIndex of serieContainer) {\n    serieContainerIndex.addEventListener(\"click\", handleClick);\n  }\n};\n\n// en el handle vemos si esta o no clickada como fav\nconst handleClick = ev => {\n  // cogemos la serie seleccionada/clickada\n  const serieIndex = getClickedSerieIndex(ev);\n  if (isFavSerie(serieIndex)) {\n    removeFav(serieIndex);\n  } else {\n    addFav(serieIndex);\n  }\n\n  paintFavSeries();\n  setSeriesIntoLS();\n  getSeriesFromLS();\n  paintSeries();\n  listenSeries();\n  // Actualizar LS con los favoritos\n  getSeriesFromLS();\n  setSeriesIntoLS();\n};\n\nconst getClickedSerieIndex = ev => {\n  // currentTarget sobre el que escucho el ev\n  const currentTarget = ev.currentTarget;\n  // index es una propiedad añadida con data-*, la convertimos a nº\n  const clickedSerieIndex = parseInt(currentTarget.dataset.index);\n  return clickedSerieIndex;\n};\n\nconst isFavSerie = serieIndex => {\n  const found = favSeries.some(item => item.name === series[serieIndex].name);\n  return found;\n};\n\nconst addFav = serieIndex => {\n  if (isFavSerie(serieIndex) === false) {\n    // Tenemos que pasarle el objeto entero para llamarlo de LS\n    favSeries.push(series[serieIndex]);\n    console.log(\"Add serie Index to `favSeries` array >>> Favourites:\", favSeries);\n  }\n};\n\nconst removeFav = serieIndex => {\n  const favIndex = favSeries.indexOf(series[serieIndex]);\n  favSeries.splice(favIndex, 1);\n  console.log(\"Remove from array `favSeries`>>> Favourites:\", favSeries);\n};\n\nconst paintFavSeries = () => {\n  //debugger;\n  const favUl = document.querySelector(\".js-listFav\");\n  let htmlCodeFav = \"\";\n  for (let favIndexx = 0; favIndexx < favSeries.length; favIndexx = favIndexx + 1) {\n    htmlCodeFav += `<li class=\"fav__item js-fav\">`;\n    htmlCodeFav += `<img class=\"fav__image\" src=\"${favSeries[favIndexx].image}\">`;\n    htmlCodeFav += `<p class=\"fav__name\">${favSeries[favIndexx].name}</p></li>`;\n  }\n  favUl.innerHTML = htmlCodeFav;\n};\n\nbuttonSearch.addEventListener(\"click\", getDataFromServer);\nstartSearch();\n"]}